---
interface Props {
	title: string;
	description?: string;
	url: string;
	image?: string;
	gradient?: string;
	isWide?: boolean;
	isTall?: boolean;
	additionalContent?: string;
}

const { 
	title, 
	description, 
	url, 
	image, 
	gradient,
	isWide = false, 
	isTall = false,
	additionalContent 
} = Astro.props;

const cardClasses = [
	'link-card',
	(image || gradient) ? 'image-card' : 'text-card',
	isWide ? 'wide' : '',
	isTall ? 'tall' : ''
].filter(Boolean).join(' ');
---

<div class="link-card-wrapper">
	<a href={url} target="_blank" rel="noopener noreferrer" class={cardClasses}>
		{(image || gradient) ? (
			<div class="image-card-content">
				{image ? (
					<img 
						src={image} 
						alt={title}
						loading="lazy"
						class="card-image"
					/>
				) : (
					<div 
						class="card-gradient"
						style={`background: ${gradient}`}
					></div>
				)}
				<div class="card-overlay">
					<div class="card-content">
						<h3 class="card-title">{title}</h3>
						{description && <p class="card-description">{description}</p>}
					</div>
				</div>
			</div>
		) : (
			<div class="card-content">
				<h3 class="card-title">{title}</h3>
				{description && <p class="card-description">{description}</p>}
			</div>
		)}
	</a>
	
	{additionalContent && (
		<div class="additional-content">
			<p>{additionalContent}</p>
		</div>
	)}
</div>

<style scoped>
	.link-card-wrapper {
		display: flex;
		flex-direction: column;
		gap: 0.75rem;
	}

	.link-card {
		display: block;
		text-decoration: none;
		color: inherit;
		border-radius: 2rem;
		background: var(--card-bg);
		border: none;
		transition: all var(--transition-medium);
		overflow: hidden;
		position: relative;
		will-change: transform;
		transform: translateZ(0);
		box-shadow: var(--shadow-raised);
	}

	.link-card:hover {
		transform: translateY(-2px);
		background: var(--card-bg);
		box-shadow: var(--shadow-soft);
	}

	/* Image cards */
	.image-card {
		height: 200px;
		position: relative;
	}

	.image-card-content {
		width: 100%;
		height: 100%;
		position: relative;
		overflow: hidden;
		transform: translateZ(0);
	}

	.card-image {
		width: 100%;
		height: 100%;
		object-fit: cover;
		transition: transform var(--transition-medium);
		transform: translateZ(0);
	}

	.card-gradient {
		width: 100%;
		height: 100%;
		transition: transform var(--transition-medium);
		transform: translateZ(0);
	}

	.image-card:hover .card-image {
		transform: scale(1.05);
	}

	.image-card:hover .card-gradient {
		transform: scale(1.05);
	}

	.card-overlay {
		position: absolute;
		bottom: 0;
		left: 0;
		right: 0;
		background: linear-gradient(transparent 0%, rgba(230, 231, 238, 0.85) 50%, rgba(230, 231, 238, 0.95) 100%);
		transition: background var(--transition-medium);
		padding: 1.5rem;
		display: flex;
		align-items: flex-end;
		min-height: 80px;
		backdrop-filter: blur(10px);
	}

	.image-card:hover .card-overlay {
		background: linear-gradient(transparent 0%, rgba(230, 231, 238, 0.9) 50%, rgba(230, 231, 238, 1) 100%);
	}

	/* Text cards */
	.text-card {
		padding: 1.5rem;
		height: 200px;
		display: flex;
		align-items: flex-end;
	}

	.text-card:hover {
		box-shadow: var(--shadow-pressed);
		transform: translateY(1px);
	}

	/* Card content */
	.card-content {
		flex: 1;
		display: flex;
		flex-direction: column;
		gap: 0.5rem;
		text-align: left;
	}

	.card-title {
		font-size: 1.125rem;
		font-weight: 600;
		margin: 0;
		color: var(--text);
		text-shadow: 1px 1px 2px rgba(255, 255, 255, 0.8);
		line-height: 1.3;
	}

	.card-description {
		font-size: 0.875rem;
		color: var(--text-secondary);
		margin: 0;
		text-shadow: 1px 1px 2px rgba(255, 255, 255, 0.6);
		line-height: 1.4;
	}

	/* Additional content */
	.additional-content {
		padding: 0 0.5rem;
	}

	.additional-content p {
		font-size: 0.875rem;
		color: var(--text-secondary);
		margin: 0;
		line-height: 1.5;
	}

	/* Mobile adjustments */
	@media (max-width: 768px) {
		.image-card {
			height: auto;
			min-height: 180px;
			background: transparent;
		}
		
		.image-card .card-gradient {
			display: block !important;
			opacity: 1 !important;
		}
		
		.card-overlay {
			padding: 1rem;
			background: linear-gradient(transparent 0%, rgba(230, 231, 238, 0.7) 40%, rgba(230, 231, 238, 0.9) 100%);
		}
		
		.text-card {
			padding: 1rem;
		}
		
		.card-title {
			font-size: 1rem;
		}
		
		.card-description {
			font-size: 0.8rem;
		}
		
		/* Force single column on mobile */
		.wide {
			grid-column: span 1 !important;
		}
		
		.tall {
			grid-row: span 1 !important;
		}
	}
</style>

<script>
	// Card height consistency - no longer needed for aspect ratio
	document.addEventListener('DOMContentLoaded', () => {
		// Cards now have consistent fixed heights
		console.log('Cards initialized with consistent heights');
	});
</script>